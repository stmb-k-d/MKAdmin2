# Generated by Django 5.1.7 on 2025-03-27 16:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_set_id', models.CharField(max_length=100, unique=True, verbose_name='ID группы объявлений')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('active', 'Активен'), ('paused', 'Приостановлен'), ('completed', 'Завершен'), ('archived', 'В архиве')], default='draft', max_length=20, verbose_name='Статус')),
                ('daily_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ежедневный бюджет')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Группа объявлений',
                'verbose_name_plural': 'Группы объявлений',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_id', models.CharField(max_length=100, unique=True, verbose_name='ID кампании')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('active', 'Активна'), ('paused', 'Приостановлена'), ('completed', 'Завершена'), ('archived', 'В архиве')], default='draft', max_length=20, verbose_name='Статус')),
                ('budget_type', models.CharField(choices=[('daily', 'Ежедневный'), ('lifetime', 'Общий')], default='daily', max_length=10, verbose_name='Тип бюджета')),
                ('daily_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ежедневный бюджет')),
                ('total_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Общий бюджет')),
                ('spent', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Потрачено')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Рекламная кампания',
                'verbose_name_plural': 'Рекламные кампании',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FacebookAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=100, unique=True, verbose_name='ID аккаунта')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('password', models.CharField(max_length=255, verbose_name='Пароль')),
                ('status', models.CharField(choices=[('active', 'Активен'), ('inactive', 'Неактивен'), ('blocked', 'Заблокирован'), ('pending', 'На проверке')], default='pending', max_length=20, verbose_name='Статус')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Баланс')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Валюта')),
                ('last_check', models.DateTimeField(auto_now=True, verbose_name='Последняя проверка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Аккаунт Facebook',
                'verbose_name_plural': 'Аккаунты Facebook',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Proxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(verbose_name='IP адрес')),
                ('port', models.IntegerField(verbose_name='Порт')),
                ('proxy_type', models.CharField(choices=[('http', 'HTTP'), ('socks4', 'SOCKS4'), ('socks5', 'SOCKS5')], max_length=10, verbose_name='Тип прокси')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='Логин')),
                ('password', models.CharField(blank=True, max_length=100, null=True, verbose_name='Пароль')),
                ('status', models.CharField(choices=[('active', 'Активен'), ('inactive', 'Неактивен'), ('blocked', 'Заблокирован')], default='active', max_length=20, verbose_name='Статус')),
                ('last_check', models.DateTimeField(auto_now=True, verbose_name='Последняя проверка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Прокси',
                'verbose_name_plural': 'Прокси',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='menuitem',
            options={'ordering': ['order'], 'verbose_name': 'Пункт меню', 'verbose_name_plural': 'Пункты меню'},
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='icon',
            field=models.CharField(blank=True, max_length=50, verbose_name='Иконка'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Активен'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='name',
            field=models.CharField(max_length=100, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='order',
            field=models.IntegerField(default=0, verbose_name='Порядок'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='url',
            field=models.CharField(max_length=200, verbose_name='URL'),
        ),
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_id', models.CharField(max_length=100, unique=True, verbose_name='ID объявления')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('active', 'Активно'), ('paused', 'Приостановлено'), ('completed', 'Завершено'), ('archived', 'В архиве')], default='draft', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('ad_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ads', to='dashboard.adset', verbose_name='Группа объявлений')),
            ],
            options={
                'verbose_name': 'Объявление',
                'verbose_name_plural': 'Объявления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='adset',
            name='campaign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ad_sets', to='dashboard.campaign', verbose_name='Кампания'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='dashboard.facebookaccount', verbose_name='Аккаунт'),
        ),
        migrations.CreateModel(
            name='AdSetStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('impressions', models.IntegerField(default=0, verbose_name='Показы')),
                ('clicks', models.IntegerField(default=0, verbose_name='Клики')),
                ('ctr', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='CTR')),
                ('spend', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Потрачено')),
                ('conversions', models.IntegerField(default=0, verbose_name='Конверсии')),
                ('cost_per_conversion', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Стоимость конверсии')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('ad_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='dashboard.adset', verbose_name='Группа объявлений')),
            ],
            options={
                'verbose_name': 'Статистика группы объявлений',
                'verbose_name_plural': 'Статистика групп объявлений',
                'ordering': ['-date'],
                'unique_together': {('ad_set', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AdStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('impressions', models.IntegerField(default=0, verbose_name='Показы')),
                ('clicks', models.IntegerField(default=0, verbose_name='Клики')),
                ('ctr', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='CTR')),
                ('spend', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Потрачено')),
                ('conversions', models.IntegerField(default=0, verbose_name='Конверсии')),
                ('cost_per_conversion', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Стоимость конверсии')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='dashboard.ad', verbose_name='Объявление')),
            ],
            options={
                'verbose_name': 'Статистика объявления',
                'verbose_name_plural': 'Статистика объявлений',
                'ordering': ['-date'],
                'unique_together': {('ad', 'date')},
            },
        ),
        migrations.CreateModel(
            name='CampaignStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('impressions', models.IntegerField(default=0, verbose_name='Показы')),
                ('clicks', models.IntegerField(default=0, verbose_name='Клики')),
                ('ctr', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='CTR')),
                ('spend', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Потрачено')),
                ('conversions', models.IntegerField(default=0, verbose_name='Конверсии')),
                ('cost_per_conversion', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Стоимость конверсии')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='dashboard.campaign', verbose_name='Кампания')),
            ],
            options={
                'verbose_name': 'Статистика кампании',
                'verbose_name_plural': 'Статистика кампаний',
                'ordering': ['-date'],
                'unique_together': {('campaign', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AccountProxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proxies', to='dashboard.facebookaccount', verbose_name='Аккаунт')),
                ('proxy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='dashboard.proxy', verbose_name='Прокси')),
            ],
            options={
                'verbose_name': 'Прокси аккаунта',
                'verbose_name_plural': 'Прокси аккаунтов',
                'unique_together': {('account', 'proxy')},
            },
        ),
    ]
